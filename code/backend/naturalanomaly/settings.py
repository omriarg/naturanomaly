"""
Django settings for naturalanomaly project.

Demo-friendly: runs out-of-the-box with SQLite if MySQL env vars are missing.
Generated by 'django-admin startproject' using Django 5.1.3.
Docs:
- https://docs.djangoproject.com/en/5.1/topics/settings/
- https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path
import os

# =============================================================================
# Paths & optional .env
# =============================================================================
BASE_DIR = Path(__file__).resolve().parent.parent

# Load .env if present (safe to ignore if python-dotenv isn't installed)
try:
    from dotenv import load_dotenv
    load_dotenv(BASE_DIR / ".env")
except Exception:
    pass

API_PREFIX = os.environ.get('API_PREFIX', default='api/')
# =============================================================================
# Core flags (safe demo defaults)
# =============================================================================
SECRET_KEY = os.getenv("SECRET_KEY", "demo-secret-key-not-for-production")
DEBUG = os.getenv("DEBUG", "1") == "1"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "*").split(",")

# =============================================================================
# Applications
# =============================================================================
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "naturalanomaly",

    "corsheaders",  # allow cross-origin in demo (lock down for prod)
]

# =============================================================================
# Middleware  (corsheaders should be near the top, before CommonMiddleware)
# =============================================================================
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",   # <-- keep early
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# =============================================================================
# URLs / WSGI
# =============================================================================
ROOT_URLCONF = "naturalanomaly.urls"
WSGI_APPLICATION = "naturalanomaly.wsgi.application"
# If you also use ASGI:
# ASGI_APPLICATION = "naturalanomaly.asgi.application"

# =============================================================================
# Templates (required for admin)
# =============================================================================
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # You can add a 'templates' directory at project root if you want
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# =============================================================================
# Database
# - If MySQL env vars exist -> use MySQL
# - Else -> fall back to SQLite (file db.sqlite3), or in-memory if DEMO_TEMP_DB=1
# =============================================================================
MYSQL_ENV_PRESENT = all(
    os.getenv(k) for k in ["DB_NAME", "DB_USER", "DB_PASSWORD", "DB_HOST", "DB_PORT"]
)

if MYSQL_ENV_PRESENT:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": os.getenv("DB_NAME"),
            "USER": os.getenv("DB_USER"),
            "PASSWORD": os.getenv("DB_PASSWORD"),
            "HOST": os.getenv("DB_HOST"),
            "PORT": os.getenv("DB_PORT"),
            "OPTIONS": {
                # Relaxed strictness for demos; adjust for your env if needed
                "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
            },
        }
    }
else:
    use_temp = os.getenv("DEMO_TEMP_DB", "0") == "1"
    sqlite_name = ":memory:" if use_temp else (BASE_DIR / "db.sqlite3")
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": sqlite_name,
        }
    }

# =============================================================================
# Password validation
# =============================================================================
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# =============================================================================
# I18N / TZ
# =============================================================================
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# =============================================================================
# Static files
# =============================================================================
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "static"

# =============================================================================
# CORS / CSRF (demo-friendly; tighten for production)
# =============================================================================
CORS_ALLOW_ALL_ORIGINS = True
# If you need CSRF trusted origins, set CSV list in env: https://docs.djangoproject.com/en/5.1/ref/settings/#csrf-trusted-origins
CSRF_TRUSTED_ORIGINS = (
    os.getenv("CSRF_TRUSTED_ORIGINS", "").split(",") if os.getenv("CSRF_TRUSTED_ORIGINS") else []
)

# =============================================================================
# Primary key type
# =============================================================================
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# =============================================================================
# NOTE ON AUTO-BOOTSTRAP
# -----------------------------------------------------------------------------
# If you *must* auto-create a demo user / load fixtures on startup, the
# recommended place is a post_migrate signal in naturalanomaly/signals.py,
# not here, to avoid "Accessing the DB during app initialization" warnings.
# =============================================================================
